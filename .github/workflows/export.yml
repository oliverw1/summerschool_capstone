name: Export

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/**'
      - 'scripts/**'
      - 'summer_capstone/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infrastructure/**'
      - 'scripts/**'
      - 'summer_capstone/**'

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      working_directory: .
      terraform_version: 1.0.1
    strategy:
      matrix:
        python-version: [ 3.7 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push the docker container
        run: make docker-push
        working-directory: ${{ env.working_directory }}

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.terraform_version }}

      - name: 'Terraform Format'
        run: terraform fmt
        working-directory: ${{ env.working_directory }}/infrastructure

      - name: 'Terraform Init environment'
        if: github.ref == 'refs/heads/main'
        run: terraform init
        working-directory: ${{env.working_directory}}/infrastructure

      - name: 'Terraform apply environment'
        if: github.ref != 'refs/heads/main'
        run: terraform apply -auto-approve
        working-directory: ${{env.working_directory}}/infrastructure
